Задание 18 (Мультиплексирование)
Реализовать программу-сервер, написанную при решении задач 15 или 16, с использованием мультиплексирования ввода-вывода и одного потока исполнения.
Можно применить любую функцию (select/poll/epoll).

TCP сервер реализован с помощью функции select(). Отличие от 16 задания - реализация в одном процессе. С помощью мультиплексирования (select) определяется дескриптор,
который имеет изменения, в зависимости от того что приходит в сообщении дальнейшие действия различаются:
    Все возможные сообщения от клиентов:
     - "start" - начало работы с сокетом - отправка клиенту меню
     - "1" - запрос на калькулятор - ничего не отправлять
     - "2" - запрос на передачу файла - отправка файла
     - 16-ый байт =  '+' '-' '*' '/' - данные для калькулятора - отправка результата
     - "3" - отсоединение клиента

Соответсвенно реализованы те же функции, но есть небольшие изменения.




По заданию 16(TCP сокеты c функцией передачи файла)

Отладить программы ТСP-клиента и сервера из лекции.
Добавить возможность вычисления разности, произведения, частного двух чисел.
Необходимое математическое действие указывает клиент.

Клиент-серверное приложение. Сервер - калькулятор.

Сделано на основе задания 15
Добавлено:
- Возможность передачи файла file_server от сервера клиенту, клиент создаст свой файл - file_client. Реализовано с помощью небуфферизованного и корректного ввода вывода из файла (read write) и
отправки информации через сокета TCP.
- Функции для сервера вынесены в файл func_server.c, функции клиентского приложения находятя в файле main_client.c
- Меню, которое посылает сервер клиенту, в зависимости от ответа на которое будет выполняться соответствующая функция.
Параметры и особенности запуску программ не изменились.

по заданию 15:
Server:
Параметры запуска ./server <port>
Сервер создает слушающий сокет, который приниамает на любой локальный IP адрес и порт(указывается при запуске). Сокет переводится в режим прослушивания соединений
с чоередью подключений равной 5. Затем сервер переводится в режим ожидания после вызова фукции accept(), которая ждет запроса на подключение со стороны клиента 
(connect()). После успещного вызова функции accept(), созадется слкет, который жестко связан с клиентским портим и ip адресом. Создается подпроцесс для работы 
с клиентом. При этом родительский процесс закрывает новый сокет и вноввь переходит в режим ожидания на подключение. Дочерний же процесс закрывает сокет 
прослушивания новых соединений.
Работа с клиентом:
-сервер ожидает получения сообщения для начала обработки информации
-сервер посылает сообщение клиенту о готовности принимать ифнормацию
-сервер принимает сообщение в котором передается структура, с хранящимися в ней числами и действием которое необходимо сделать с этими числами.
-происходит обработка данных и получения резульатат действия
-в ответном сообщении сервер посылает ту же структуру, но с заполненным полем result.
..
-в случае окончании сессии со стороны клиента (в нормальном режиме работы посылается сообщение в той же структуре, где в действии лежит символ "q"), сервер понимает,
что клиент закрыл подключение и тоже закрывает свой сокет.

Client:
Параметры запуска ./client <ip address client / name of server> <port server> например (./client 127.0.0.5 50004) - порт сервера - порт который указывается при запуске серевера
Инициируется подключение к сереверу через функцию connect, успешный вызвов которой вернет дескриптор сокета жестко связнный с сервером.
!!Для начала работы необходимо ппрописать команду "start"!!, после которой посылается пробное сообщение серверу и ожидается от него ответ о готовности (меню).
Затем программа запрашивает данные для обработки на сервере и записывает из в структуру (числа и действие необхоимое выполнить над ними).
Отправлется сообщение в котором содержится данная структура и программа ожидает ответ.
Получив ответ в структуре будет заполнено поле result с результатом математичсеской операции, которое выводится на экран.
Для завершеия сессии необходимо в дейстии прописать команду "q", программа пошлет сообщение серверу о заверщении сессии, произойдет закрытие сокета и выход из программы

Доп. информация: 
Математичские операции файл mymaths.c
Фукнции ввода данных - input_char.c